var $=Object.create;var _=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,W=Object.prototype.hasOwnProperty;var q=(s,t)=>{for(var e in t)_(s,e,{get:t[e],enumerable:!0})},x=(s,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of A(t))!W.call(s,r)&&r!==e&&_(s,r,{get:()=>t[r],enumerable:!(n=z(t,r))||n.enumerable});return s};var C=(s,t,e)=>(e=s!=null?$(R(s)):{},x(t||!s||!s.__esModule?_(e,"default",{value:s,enumerable:!0}):e,s)),M=s=>x(_({},"__esModule",{value:!0}),s);var L={};q(L,{Cell:()=>f,Chord:()=>p,Converter:()=>v,LogLevel:()=>d,Playlist:()=>g,Song:()=>u,Version:()=>b,convert:()=>G,convertSync:()=>N});module.exports=M(L);var j=C(require("promise"),1);var w=C(require("fast-diff"),1),g=class{constructor(t){let e=/.*?(irealb(?:ook)?):\/\/([^"]*)/.exec(t),r=decodeURIComponent(e[2]).split("===");r.length>1&&(this.name=r.pop()),this.songs=r.map(i=>{try{return new u(i,e[1]==="irealbook")}catch(a){let l=i.split("="),o=u.parseTitle(l[0].trim());return console.error(`[ireal-musicxml] [${o}] ${a}`),null}}).filter(i=>i!==null).reduce((i,a)=>{if(i.length>0){let l=(0,w.default)(i[i.length-1].title,a.title);if(l[0][0]===0&&l.every(o=>o[0]===0||o[1].match(/^\d+$/)))return i[i.length-1].cells=i[i.length-1].cells.concat(a.cells),i}return i.push(a),i},[])}},f=class{constructor(){this.annots=[],this.comments=[],this.bars="",this.spacer=0,this.chord=null}},p=class{constructor(t,e="",n=null,r=null){this.note=t,this.modifiers=e,this.over=n,this.alternate=r}},u=class s{constructor(t,e=!1){if(this.cells=[],this.musicXml="",!t){this.title="",this.composer="",this.style="",this.key="",this.transpose=0,this.groove="",this.bpm=0,this.repeats=0;return}let n=t.split("=");if(e)this.title=s.parseTitle(n[0].trim()),this.composer=s.parseComposer(n[1].trim()),this.style=n[2].trim(),this.key=n[3],this.cells=this.parse(n[5]);else{this.title=s.parseTitle(n[0].trim()),this.composer=s.parseComposer(n[1].trim()),this.style=n[3].trim(),this.key=n[4],this.transpose=+n[5]||0,this.groove=n[7],this.bpm=+n[8],this.repeats=+n[9]||3;let r=n[6].split("1r34LbKcu7");this.cells=this.parse(U(r[1]))}}static chordRegex=/^([A-G][b#]?)((?:sus|alt|add|[+\-^\dhob#])*)(\*.+?\*)*(\/[A-G][#b]?)?(\(.*?\))?/;static chordRegex2=/^([ Wp])()()(\/[A-G][#b]?)?(\(.*?\))?/;static regExps=[/^\*[a-zA-Z]/,/^T\d\d/,/^N./,/^<.*?>/,s.chordRegex,s.chordRegex2];parse(t){let e=t.trim(),n=[];for(;e;){let l=!1;for(let o=0;o<s.regExps.length;o++){let c=s.regExps[o].exec(e);if(c){l=!0,c.length<=2?(n.push(c[0]),e=e.substr(c[0].length)):(n.push(c),e=e.substr(c[0].length));break}}l||(e[0]!==","&&n.push(e[0]),e=e.substr(1))}let r=[],i=this.newCell(r),a=null;for(let l=0;l<n.length;l++){let o=n[l];switch(o instanceof Array&&(i.chord=this.parseChord(o),o=" "),o[0]){case"{":case"[":a&&(a.bars+=")",a=null),i.bars=o,o=null;break;case"|":a&&(a.bars+=")",a=null),i.bars="(",o=null;break;case"]":case"}":case"Z":a&&(a.bars+=o,a=null),o=null;break;case"n":i.chord=new p(o[0]);break;case",":o=null;break;case"S":case"T":case"Q":case"N":case"U":case"s":case"l":case"f":case"*":i.annots.push(o),o=null;break;case"Y":i.spacer++,o=null,a=null;break;case"r":case"x":case"W":i.chord=new p(o);break;case"<":o=o.substr(1,o.length-2),i.comments.push(o),o=null;break;default:}o&&l<n.length-1&&(a=i,i=this.newCell(r))}return r}static parseTitle(t){return t.replace(/(.*)(, )(A|The)$/g,"$3 $1")}static parseComposer(t){let e=t.split(/(\s+)/);return e.length==3?e[2]+e[1]+e[0]:t}parseChord(t){var e=t[1]||" ",n=t[2]||"",r=t[3]||"";r&&(n+=r.substr(1,r.length-2));var i=t[4]||"";i[0]==="/"&&(i=i.substr(1));var a=t[5]||null;if(a&&(t=s.chordRegex.exec(a.substr(1,a.length-2)),t?a=this.parseChord(t):a=null),e===" "&&!a&&!i)return null;if(i){var l=i[1]==="#"||i[1]==="b"?2:1;i=new p(i.substr(0,l),i.substr(l),null,null)}else i=null;return new p(e,n,i,a)}newCell(t){var e=new f;return t.push(e),e}};function U(s){let t="",e;for(;s.length>51;)e=s.substring(0,50),s=s.substring(50),t=t+O(e);return t=t+s,t=t.replace(/Kcl/g,"| x").replace(/LZ/g," |").replace(/XyQ/g,"   "),t}function O(s){let t=s.split("");for(let e=0;e<5;e++)t[49-e]=s[e],t[e]=s[49-e];for(let e=10;e<24;e++)t[49-e]=s[e],t[e]=s[49-e];return t.join("")}var D=C(require("jstoxml"),1),E=C(require("chord-symbol"),1);var y={name:"ireal-musicxml",version:"2.0.0",description:"iReal Pro to MusicXML converter.",author:"Karim Ratib <karim.ratib@gmail.com> (https://github.com/infojunkie)",license:"GPL-3.0-only",repository:{type:"git",url:"https://github.com/infojunkie/ireal-musicxml"},homepage:"https://github.com/infojunkie/ireal-musicxml",type:"module",types:"./build/ireal-musicxml.d.ts",files:["LICENSE.txt","build/*","src/*"],bin:{"ireal-musicxml":"./src/cli/cli.js"},exports:{import:"./build/ireal-musicxml.js",require:"./build/ireal-musicxml.cjs"},scripts:{build:"npm run build:esm && npm run build:cjs && npm run build:d.ts","build:d.ts":"cp src/types/* build/","build:esm":"esbuild src/lib/index.js --bundle --format=esm --minify --sourcemap --outfile=build/ireal-musicxml.js","build:cjs":"esbuild src/lib/index.js --bundle --platform=node --packages=external --minify --sourcemap --outfile=build/ireal-musicxml.cjs",test:"npm run build && npm run test:lint && npm run test:spec && npm run test:ts","test:spec":'node --test --test-name-pattern="${TEST:-.*}"',"test:ts":"node --test --loader=ts-node/esm --require ts-node/register test/*.spec.ts","test:lint":"eslint src --fix"},devDependencies:{"@types/node":"^22.7.7","@xmldom/xmldom":"^0.8.0",esbuild:"0.24.0",eslint:"^9.13.0",resolve:"^1.22.8","sanitize-filename":"^1.6.3","ts-node":"^10.9.2",typescript:"^4.9.5","validate-with-xmllint":"^1.2.0","xpath.js":"^1.1.0"},dependencies:{"chord-symbol":"^3.0.0","fast-diff":"^1.2.0",jstoxml:"^2.0.6",promise:"^8.1.0"}};var b=class{static name=y.name;static version=y.version;static author=y.author;static description=y.description};var{chordParserFactory:I,chordRendererFactory:B}=E.default,d=class{static Debug=0;static Info=1;static Warn=2;static Error=3;static None=4},k="4.0",S=7,T=40,v=class s{static defaultOptions={divisions:768,notation:"rhythmic",step:"B",octave:4,notehead:"slash",noteheadSize:"large",date:!0,clef:!1,keySignature:!1,pageWidth:210,pageHeight:297,pageMargin:15,logLevel:d.Warn};static sequenceAttributes=["divisions","key","time","staves","part-symbol","instruments","clef","staff-details","transpose","directive","measure-style"];static sequenceNote=["cue","pitch","rest","unpitched","duration","tie","voice","type","dot","accidental","time-modification","stem","notehead","notehead-text","staff","beam","notations","lyric","play"];static sequenceNotations=["accidental-mark","arpeggiate","articulations","dynamics","fermata","glissando","non-arpeggiate","ornaments","other-notation","slide","slur","technical","tied","tuplet"];static sequenceBarline=["bar-style","footnote","level","wavy-line","segno","coda","fermata","ending","repeat"];static mapAlter={"#":1,b:-1};static mapFifthsToAlters={sharp:["F","C","G","D","A","E","B"],flat:["B","E","A","D","G","C","F"]};static mapRepeats={"D.C. al Coda":s.prototype.convertDaCapo,"D.C. al Fine":s.prototype.convertDaCapo,"D.C. al 1st End.":s.prototype.convertDaCapo,"D.C. al 2nd End.":s.prototype.convertDaCapo,"D.C. al 3rd End.":s.prototype.convertDaCapo,"D.S. al Coda":s.prototype.convertDalSegno,"D.S. al Fine":s.prototype.convertDalSegno,"D.S. al 1st End.":s.prototype.convertDalSegno,"D.S. al 2nd End.":s.prototype.convertDalSegno,"D.S. al 3rd End.":s.prototype.convertDalSegno,Fine:s.prototype.convertFine,"3x":s.prototype.convertRepeatNx,"4x":s.prototype.convertRepeatNx,"5x":s.prototype.convertRepeatNx,"6x":s.prototype.convertRepeatNx,"7x":s.prototype.convertRepeatNx,"8x":s.prototype.convertRepeatNx};static convert(t,e={}){let n=Object.assign({},this.defaultOptions,e);return new s(t,n).convert()}constructor(t,e){this.song=t,this.options=e,this.time={beats:4,beatType:4},this.fifths=null,this.measure=null,this.barRepeat=0,this.codas=[],this.repeats=0,this.emptyCells=0,this.emptyCellNewSystem=!1,this.cellWidth=(this.options.pageWidth-2*this.options.pageMargin)/16,this.parseChord=I({altIntervals:["b5","b9"]}),this.renderChord=B({useShortNamings:!0,printer:"raw"})}convert(){return D.default.toXML(this.convertSong(),{header:`
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML ${k} Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd">
      `.trim(),indent:"  "})}convertSong(){return{_name:"score-partwise",_attrs:{version:k},_content:[{work:{"work-title":this.song.title}},{identification:[{_name:"creator",_attrs:{type:"composer"},_content:this.song.composer},{encoding:[{software:`@infojunkie/ireal-musicxml ${b.version}`},{...this.options.date&&{"encoding-date":s.convertDate(new Date)}},{_name:"supports",_attrs:{element:"accidental",type:"no"}},{_name:"supports",_attrs:{element:"transpose",type:"no"}},{_name:"supports",_attrs:{attribute:"new-page",element:"print",type:"yes",value:"yes"}},{_name:"supports",_attrs:{attribute:"new-system",element:"print",type:"yes",value:"yes"}}]}]},{defaults:{scaling:{millimeters:S,tenths:T},"page-layout":{"page-height":s._mmToTenths(this.options.pageHeight),"page-width":s._mmToTenths(this.options.pageWidth),"page-margins":{"left-margin":s._mmToTenths(this.options.pageMargin,4),"right-margin":s._mmToTenths(this.options.pageMargin,4),"top-margin":s._mmToTenths(this.options.pageMargin,4),"bottom-margin":s._mmToTenths(this.options.pageMargin,4)}}}},{"part-list":{_name:"score-part",_attrs:{id:"P1"},_content:{_name:"part-name",_attrs:{"print-object":"no"},_content:"Lead Sheet"}}},{_name:"part",_attrs:{id:"P1"},_content:this.convertMeasures()}]}}static convertDate(t){return new Date(t.getTime()-t.getTimezoneOffset()*6e4).toISOString().split("T")[0]}static Measure=class{constructor(t){this.body={_name:"measure",_attrs:{number:t},_content:[]},this.attributes=[],this.chords=[],this.barlines=[],this.barEnding=null}number(){return this.body._attrs.number}assemble(){return this.attributes.length&&this.body._content.push({attributes:s.reorderSequence(this,this.attributes,s.sequenceAttributes)}),this.chords.forEach(t=>{this.body._content.push({harmony:t.harmony},...t.notes.map(e=>({note:e})))}),this.barlines[0]._content=s.reorderSequence(this,this.barlines[0]._content,s.sequenceBarline),this.body._content.splice(1,0,this.barlines[0]),this.barlines[1]._content=s.reorderSequence(this,this.barlines[1]._content,s.sequenceBarline),this.body._content.push(this.barlines[1]),this.body}};static Chord=class{constructor(t,e,n){this.harmony=t,this.notes=e,this.ireal=n,this.spaces=0,this.fermata=!1}};convertMeasures(){let t=r=>r>0&&r%16===0,e=this.song.cells.reduce((r,i,a)=>{if((i.bars.match(/\(|\{|\[/)||!this.measure&&(i.chord||i.annots.length||i.comments.length))&&(this.measure&&(this._log(d.Warn,"Starting a new measure over existing measure. Closing current measure first."),this.measure.barlines.push(this.convertBarline("","right")),this.adjustChordsDuration(this.measure)&&r.push(this.measure)),this.measure=new s.Measure(r.length+1,this.options),r.length||(this.measure.attributes.push({divisions:this.options.divisions},{_name:"clef",_attrs:[{"print-object":this.options.clef?"yes":"no"}],_content:[{sign:"G"},{line:2}]},{"staff-details":{"staff-lines":0}},{"measure-style":[{_name:"slash",_attrs:{type:"start","use-stems":this.options.notation==="rhythmic"?"yes":"no"}}]},this.convertKey()),this.song.bpm&&this.measure.body._content.push(this.convertTempo(this.song.bpm)),this.measure.body._content.push(this.convertStyleAndGroove(this.song.style,this.song.groove))),this.measure.barlines.push(this.convertBarline(i.bars,"left")),this.barRepeat&&(this.measure.chords=[...r[r.length-this.barRepeat-1].chords])),!this.measure)return(i.chord||i.annots.length||i.comments.length||i.bars&&i.bars!==")")&&this._log(d.Warn,`Found non-empty orphan cell ${JSON.stringify(i)}`,r[r.length-1]),this.emptyCells++,t(a)&&(this.emptyCellNewSystem=!0),r;if((t(a)||this.emptyCellNewSystem)&&this.measure.body._content.splice(0,0,{_name:"print",_attrs:{"new-system":"yes"},_content:{...this.emptyCellNewSystem&&{"system-layout":{"system-margins":[{"left-margin":s._mmToTenths(this.cellWidth*this.emptyCells)},{"right-margin":"0.00"}]}}}}),!this.emptyCellNewSystem&&this.emptyCells>0&&(this.measure.body._content[0]?._name==="print"&&this.measure.body._content[0]._attrs?.["new-system"]==="yes"?r[r.length-1].body._content.splice(0,0,{_name:"print",_content:{"system-layout":{"system-margins":[{"left-margin":"0.00"},{"right-margin":s._mmToTenths(this.cellWidth*this.emptyCells)}]}}}):this.measure.body._content.splice(0,0,{_name:"print",_content:{"measure-layout":{"measure-distance":s._mmToTenths(this.cellWidth*this.emptyCells)}}})),this.emptyCellNewSystem=!1,this.emptyCells=0,i.chord)switch(i.chord.note){case"x":{this.barRepeat=1,this.measure.chords=[...r[r.length-this.barRepeat].chords];break}case"r":{this.barRepeat=2,this.measure.chords=[...r[r.length-this.barRepeat].chords];break}case"p":if(this.measure.chords.length){this.measure.chords[this.measure.chords.length-1].spaces++;break}case"W":{let l=this.measure;if(l.chords.length||(l=r.slice().reverse().find(o=>o.chords.length),l||this._log(d.Error,`Cannot find any measure with chords prior to ${JSON.stringify(i.chord)}`)),l){let o=l.chords[l.chords.length-1].ireal;o.over=i.chord.over,o.alternate=i.chord.alternate,this.measure.chords.push(this.convertChord(o))}break}case" ":{this._log(d.Warn,`Unhandled empty/alternate chord ${JSON.stringify(i.chord)}`);break}default:this.measure.chords.push(this.convertChord(i.chord))}else this.barRepeat||this.measure.chords.length&&this.measure.chords[this.measure.chords.length-1].spaces++;return i.annots.forEach(l=>{switch(l[0]){case"*":{let o=l.slice(1);this.measure.body._content.push(this.convertSection(o));break}case"T":{let o=l.slice(1);this.measure.attributes.push(this.convertTime(o));break}case"S":{this.measure.body._content.push(this.convertSegno());break}case"N":{let o=parseInt(l.slice(1));if(o<1&&(o=r.slice().reverse().find(h=>!!h.barEnding)?.barEnding??1),this.measure.barlines[0]._content.push(this.convertEnding(o,"start")),o>1){r[r.length-1].barlines[1]._content.push(this.convertEnding(o-1,"stop"));let c=r.slice().reverse().find(h=>h.barEnding===o-1);if(!c)this._log(d.Error,`Cannot find ending ${o-1} in right barline of any measure`);else{let h=c.barlines[1]._content.findIndex(m=>!!m&&m._name==="ending");h===-1&&this._log(d.Error,`Cannot find ending ${o-1} in right barline`,c),delete c.barlines[1]._content[h]}}this.measure.barEnding=o;break}case"Q":{this.measure.body._content.push(this.convertToCoda()),this.codas.push(this.measure);break}case"l":case"s":break;case"f":{this.measure.chords[this.measure.chords.length-1].fermata=!0;break}case"U":{this.measure.body._content.push(this.convertFine("END"));break}default:this._log(d.Warn,`Unhandled annotation "${l}"`)}}),i.comments.map(l=>l.trim()).forEach(l=>{let o=this._map(s.mapRepeats,l);o?this.measure.body._content.push(o.call(this,l)):this.measure.body._content.push(this.convertComment(l))}),i.bars.match(/\)|\}|\]|Z/)&&this.measure.chords.length&&(this.measure.barlines.push(this.convertBarline(i.bars,"right")),this.measure.barEnding&&this.measure.barlines[1]._content.push(this.convertEnding(this.measure.barEnding,"discontinue")),this.adjustChordsDuration(this.measure)&&r.push(this.measure),this.measure=null,this.barRepeat&&this.barRepeat--),r},[]),n=this.song.cells.length%16-this.emptyCells;if(n>0&&e.length>0&&e[e.length-1].body._content.splice(0,0,{_name:"print",_content:{"system-layout":{"system-margins":[{"left-margin":"0.00"},{"right-margin":s._mmToTenths(this.cellWidth*n)}]}}}),this.codas.length){let r=this.codas[this.codas.length-1],i=r.body._content.findIndex(a=>a._name==="direction"&&Array.isArray(a._content)&&a._content.some(l=>l._name==="sound"&&Object.keys(l._attrs).includes("tocoda")));i===-1&&this._log(d.Warn,"Cannot find sound direction",r),r.body._content[i]=this.convertCoda()}return e.map(r=>r.assemble())}static reorderSequence(t,e,n){return e.filter(r=>Object.keys(r).length).sort((r,i)=>{let a=Object.keys(r)[0];a==="_name"&&(a=r[a]);let l=Object.keys(i)[0];l==="_name"&&(l=i[l]);let o=n.indexOf(a),c=n.indexOf(l);return o===-1&&this._log(d.Warn,`Unrecognized element "${a}"`,t),c===-1&&this._log(d.Warn,`Unrecognized element "${l}"`,t),o-c})}convertRepeatNx(t){let e=null;(e=t.match(/(\d+)x/))!==null&&(this.repeats=e[1])}convertFine(t){return{_name:"direction",_attrs:{placement:"below"},_content:[{"direction-type":{words:t}},{_name:"sound",_attrs:{fine:"yes"}}]}}convertDaCapo(t){return{_name:"direction",_attrs:{placement:"below"},_content:[{"direction-type":{words:t}},{_name:"sound",_attrs:{dacapo:"yes"}}]}}convertDalSegno(t){return{_name:"direction",_attrs:{placement:"below"},_content:[{"direction-type":{words:t}},{_name:"sound",_attrs:{dalsegno:"yes"}}]}}convertComment(t){return{_name:"direction",_attrs:{placement:t[0]==="*"?"above":"below"},_content:{"direction-type":{words:t[0]==="*"?t.slice(3):t}}}}convertEnding(t,e){return{_name:"ending",_attrs:{number:t,type:e},_content:`${t}.`}}convertBarline(t,e){let n="regular",r=null;return t.match(/\[|\]/)?n="light-light":t.match(/Z/)?n="light-heavy":t.match(/\{|\}/)&&(n=e==="left"?"heavy-light":"light-heavy",r=e==="left"?"forward":"backward"),r==="forward"&&(this.repeats=2),{_name:"barline",_attrs:{location:e},_content:[{"bar-style":n},{...r&&{_name:"repeat",_attrs:{direction:r,...r==="backward"&&{times:this.repeats}}}}]}}convertSection(t){return t==="i"&&(t="Intro"),{_name:"direction",_attrs:{placement:"above"},_content:{"direction-type":{rehearsal:t}}}}convertSegno(){return{_name:"direction",_attrs:{placement:"above"},_content:[{"direction-type":{_name:"segno"}},{_name:"sound",_attrs:{segno:"segno"}}]}}convertCoda(){return{_name:"direction",_attrs:{placement:"above"},_content:[{"direction-type":{_name:"coda"}},{_name:"sound",_attrs:{coda:"coda"}}]}}convertToCoda(){return{_name:"direction",_attrs:{placement:"above"},_content:[{"direction-type":{words:"To Coda"}},{_name:"sound",_attrs:{tocoda:"coda"}}]}}convertTempo(t){return{_name:"direction",_attrs:{placement:"above"},_content:[{"direction-type":[{_name:"metronome",_attrs:{parentheses:"no"},_content:[{"beat-unit":this.calculateChordDuration(1)[0].type},{"per-minute":t}]}]},{_name:"sound",_attrs:{tempo:t}}]}}convertTime(t){let e=parseInt(t[0]),n=parseInt(t[1]);return t==="12"&&(e=12,n=8),this.time={beats:e,beatType:n},{time:[{beats:e},{"beat-type":n}]}}adjustChordsDuration(t){if(t.chords.length>this.time.beats)return this._log(d.Error,`Too many chords (${t.chords.length} out of ${this.time.beats})`,t),!0;let e=t.chords.reduce((n,r)=>n+1+r.spaces,0);if(!e)return this._log(d.Warn,"No chord found. Skipping current measure.",t),!1;if(e>this.time.beats){let n=0;for(;e>this.time.beats;)t.chords[n].spaces>0&&(t.chords[n].spaces--,e--),n=(n+1)%t.chords.length}else{let n=0;for(;e<this.time.beats;)t.chords[n].spaces++,e++,n=(n+1)%t.chords.length}return t.chords=t.chords.map(n=>(n.notes=this.calculateChordDuration(1+n.spaces).map((r,i,a)=>this.convertChordNote(r,i===a.length-1?n.fermata:!1,this.options.notation==="rhythmic"&&a.length>1?i>0?"stop":"start":null)),n)),!0}calculateChordDuration(t){let e={1:[{t:"eighth",d:0,b:1}],2:[{t:"quarter",d:0,b:2}],3:[{t:"quarter",d:1,b:3}],4:[{t:"half",d:0,b:4}],5:[{t:"quarter",d:1,b:3},{t:"quarter",d:0,b:2}],6:[{t:"half",d:1,b:6}],7:[{t:"half",d:2,b:7}],8:[{t:"whole",d:0,b:8}],9:[{t:"half",d:1,b:6},{t:"quarter",d:1,b:3}],10:[{t:"half",d:1,b:6},{t:"half",d:0,b:4}],11:[{t:"half",d:2,b:7},{t:"half",d:0,b:4}],12:[{t:"whole",d:1,b:12}],13:[{t:"half",d:2,b:7},{t:"half",d:1,b:6}],14:[{t:"whole",d:2,b:14}],15:[{t:"whole",d:0,b:8},{t:"half",d:2,b:7}]};if(this.options.notation==="slash"){let n=8/this.time.beatType;return Array(t).fill(this._map(e,n,[],`Unexpected beat count 1 for time signature ${this.time.beats}/${this.time.beatType}`).map(r=>({duration:r.b*this.options.divisions/2,type:r.t,dots:r.d}))[0])}else{let n=t*8/this.time.beatType;return this._map(e,n,[],`Unexpected beat count ${t} for time signature ${this.time.beats}/${this.time.beatType}`).map(r=>({duration:r.b*this.options.divisions/2,type:r.t,dots:r.d}))}}convertChordNote(t,e=!1,n=null){let r=s.mapFifthsToAlters[this.fifths>=0?"sharp":"flat"].slice(0,Math.abs(this.fifths)),i={_name:"pitch",_content:[{step:this.options.step},{alter:r.includes(this.options.step)?this.fifths>0?1:-1:0},{octave:this.options.octave}]},a=[];return e&&a.push({_name:"fermata"}),n&&a.push({_name:"tied",_attrs:{type:n}}),s.reorderSequence(this.measure,[i,{_name:"cue"},{_name:"notehead",_content:this.options.notehead,_attrs:[{"font-size":this.options.noteheadSize}]},{duration:t.duration},{voice:1},{_name:"type",_attrs:{size:"full"},_content:t.type},{...a.length&&{notations:s.reorderSequence(this.measure,a,s.sequenceNotations)}}].concat(Array(t.dots).fill({_name:"dot"})),s.sequenceNote)}convertChordDegree(t,e,n){return{_name:"degree",_attrs:{"print-object":"no"},_content:[{"degree-value":t},{"degree-alter":n},{"degree-type":e}]}}convertChordSymbol(t){let e=this.renderChord(this.parseChord(`${t.note}${t.modifiers}`));if(!e)return this._log(d.Warn,`Unrecognized chord "${t.note}${t.modifiers}"`),{rootStep:null,rootAlter:null,chordKind:null,chordDegrees:[],chordText:null};let n=e.input.rootNote[0],r=this._map(s.mapAlter,e.input.rootNote[1]||null,null,`Unrecognized accidental in chord "${e.input.rootNote}"`),i=e.formatted.descriptor+e.formatted.chordChanges.join(""),a={major:"major",major6:"major-sixth",major7:"major-seventh",dominant7:"dominant",minor:"minor",minor6:"minor-sixth",minor7:"minor-seventh",minorMajor7:"major-minor",augmented:"augmented",diminished:"diminished",diminished7:"diminished-seventh",power:"power"},l=this._map(a,e.normalized.quality,"",`Unrecognized chord quality "${e.normalized.quality}"`);if(e.normalized.extensions.length){let c=Math.max(...e.normalized.extensions.map(m=>parseInt(m))).toString(),h={9:"-ninth",11:"-11th",13:"-13th"};l=l.split("-")[0]+this._map(h,c,"",`Unhandled extension ${c}`),l==="dominant-11th"&&(e.normalized.isSuspended=!1)}[{intervals:["1","4","5"],kind:"suspended-fourth",strict:!0},{intervals:["1","5","9"],kind:"suspended-second",strict:!0},{intervals:["1","b3","b5","b7"],kind:"half-diminished",strict:!0},{intervals:["1","3","#5","b7"],kind:"augmented-seventh",strict:!1}].some(c=>{if((!c.strict||e.normalized.intervals.length===c.intervals.length)&&c.intervals.every((h,m)=>h===e.normalized.intervals[m]))return l=c.kind,c.intervals.forEach(h=>{e.normalized.alterations=e.normalized.alterations.filter(m=>m===h),e.normalized.adds=e.normalized.adds.filter(m=>m===h),e.normalized.omits=e.normalized.omits.filter(m=>m===h)}),e.normalized.intervals.forEach(h=>{c.intervals.includes(h)||e.normalized.adds.push(h)}),!0});let o=[];return e.normalized.isSuspended&&!l.includes("suspended")&&(e.normalized.adds.push("4"),e.normalized.adds.includes("3")||e.normalized.omits.push("3")),e.normalized.alterations.forEach(c=>{let h=c.slice(1);o.push(this.convertChordDegree(h,h==="5"||e.normalized.extensions.includes(h)?"alter":"add",this._map(s.mapAlter,c[0],0,`Unrecognized alter symbol in "${c}"`)))}),e.normalized.adds.forEach(c=>{let h=Object.keys(s.mapAlter).includes(c[0])?c[0]:null,m=h?c.slice(1):c;o.push(this.convertChordDegree(m,"add",this._map(s.mapAlter,h,0,`Unrecognized alter symbol in "${c}"`)))}),e.normalized.omits.forEach(c=>{let h=Object.keys(s.mapAlter).includes(c[0])?c[0]:null,m=h?c.slice(1):c;o.push(this.convertChordDegree(m,"subtract",this._map(s.mapAlter,h,0,`Unrecognized alter symbol in "${c}"`)))}),{rootStep:n,rootAlter:r,chordKind:l,chordDegrees:o,chordText:i}}convertChord(t){let e=null;if(t.note==="n")e=[{root:[{_name:"root-step",_attrs:{text:""},_content:this.options.step}]},{_name:"kind",_attrs:{text:"N.C."},_content:"none"}];else{let{rootStep:n,rootAlter:r,chordKind:i,chordDegrees:a,chordText:l}=this.convertChordSymbol(t),o=t.over?[{"bass-step":t.over.note[0]},{...t.over.note[1]&&{"bass-alter":this._map(s.mapAlter,t.over.note[1],null,`Unrecognized accidental in bass note "${t.over.note}"`)}}]:null;e=[{root:[{"root-step":n},{...r&&{"root-alter":r}}]},{_name:"kind",_attrs:{text:l,"use-symbols":"no"},_content:i},{...o&&{bass:o}}].concat(a)}return t.alternate&&this._log(d.Warn,`Unhandled alternate chord ${JSON.stringify(t.alternate)}`),new s.Chord(e,this.calculateChordDuration(1).map(n=>this.convertChordNote(n)),t)}convertKey(){let t={C:0,G:1,D:2,A:3,E:4,B:5,"F#":6,"C#":7,F:-1,Bb:-2,Eb:-3,Ab:-4,Db:-5,Gb:-6,Cb:-7,"A-":0,"E-":1,"B-":2,"F#-":3,"C#-":4,"G#-":5,"D#-":6,"A#-":7,"D-":-1,"G-":-2,"C-":-3,"F-":-4,"Bb-":-5,"Eb-":-6,"Ab-":-7};return this.fifths=this._map(t,this.song.key,0,`Unrecognized key signature "${this.song.key}"`),{_name:"key",_attrs:[{"print-object":this.options.keySignature?"yes":"no"}],_content:[{fifths:this.fifths},{mode:this.song.key.slice(-1)==="-"?"minor":"major"}]}}convertStyleAndGroove(t,e){return{_name:"direction",_attrs:{placement:"above"},_content:[{"direction-type":[{words:t}]},{sound:[{play:[{_name:"other-play",_attrs:{type:"groove"},_content:e||t}]}]}]}}_log(t,e,n=this.measure){if(t<this.options.logLevel)return;let r=`[ireal-musicxml] [${this.song.title}${n?"#"+n.number():""}] ${e}`,i="warn";switch(t){case d.Debug:i="debug";break;case d.Info:i="info";break;case d.Warn:i="warn";break;case d.Error:i="error";break}console[i](r)}_map(t,e,n,r,i=d.Warn,a=this.measure){return e?e in t?t[e]:(r&&this._log(i,r,a),n||null):n}static _mmToTenths(t,e=2){let n=t*T/S,r=Math.pow(10,e);return Math.round(n*r)/r}};function N(s,t={}){let e=new g(s);return e.songs.forEach(n=>{n.musicXml=v.convert(n,t)}),e}async function G(s,t={}){return new j.default(e=>e(N(s,t)))}0&&(module.exports={Cell,Chord,Converter,LogLevel,Playlist,Song,Version,convert,convertSync});
//# sourceMappingURL=ireal-musicxml.cjs.map
